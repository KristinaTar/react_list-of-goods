{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","jsx","showGoods","setState","map","good","reverseGoods","jsxCopy","reverse","sortAlphabetically","goodsCopy","sort","a","b","localeCompare","reset","sortByNameLength","length","className","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAEMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNF,kBACAG,IAAK,I,EAGPC,UAAY,WACV,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBC,IAAKD,EAAMF,gBAAgBM,KAAI,SAAAC,GAAI,OACjC,6BACGA,Y,EAOTC,aAAe,WACb,EAAKH,UAAS,SAAAH,GACZ,IAAMO,EAAO,YAAOP,EAAMC,KAI1B,OAFAM,EAAQC,UAEA,CACNP,IAAKM,O,EAKXE,mBAAqB,WACnB,EAAKN,UAAS,SAAAH,GACZ,IAAMU,EAAS,YAAOV,EAAMF,iBAM5B,OAJAY,EAAUC,MACR,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAGpB,CACNZ,IAAKS,EAAUN,KAAI,SAAAC,GAAI,OACrB,6BACGA,Y,EAOXU,MAAQ,WACN,EAAKb,a,EAGPc,iBAAmB,WACjB,EAAKb,UAAS,SAAAH,GACZ,IAAMU,EAAS,YAAOV,EAAMF,iBAM5B,OAJAY,EAAUC,MACR,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,UAGjB,CACNhB,IAAKS,EAAUN,KAAI,SAAAC,GAAI,OACrB,6BACGA,Y,4CAOX,WACE,OACE,mCACE,sBAAKa,UAAU,MAAf,UACE,uCAE4B,IAA1BC,KAAKnB,MAAMC,IAAIgB,OACX,wBAAQG,KAAK,SAASC,QAASF,KAAKjB,UAApC,mBAEA,gCACE,wBAAQkB,KAAK,SAASC,QAASF,KAAKb,aAApC,qBAGA,wBAAQc,KAAK,SAASC,QAASF,KAAKV,mBAApC,iCAGA,wBAAQW,KAAK,SAASC,QAASF,KAAKJ,MAApC,mBACA,wBAAQK,KAAK,SAASC,QAASF,KAAKH,iBAApC,4BAGCG,KAAKnB,MAAMC,gB,GAzFZqB,IAAMC,WAmGTxB,ICpHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b588c93e.chunk.js","sourcesContent":["import React from 'react';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goodsFromServer: string[],\n  jsx: JSX.Element[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goodsFromServer,\n    jsx: [],\n  };\n\n  showGoods = () => {\n    this.setState(state => ({\n      jsx: state.goodsFromServer.map(good => (\n        <li>\n          {good}\n        </li>\n      )),\n    }\n    ));\n  };\n\n  reverseGoods = () => {\n    this.setState(state => {\n      const jsxCopy = [...state.jsx];\n\n      jsxCopy.reverse();\n\n      return ({\n        jsx: jsxCopy,\n      });\n    });\n  };\n\n  sortAlphabetically = () => {\n    this.setState(state => {\n      const goodsCopy = [...state.goodsFromServer];\n\n      goodsCopy.sort(\n        (a, b) => a.localeCompare(b),\n      );\n\n      return ({\n        jsx: goodsCopy.map(good => (\n          <li>\n            {good}\n          </li>\n        )),\n      });\n    });\n  };\n\n  reset = () => {\n    this.showGoods();\n  };\n\n  sortByNameLength = () => {\n    this.setState(state => {\n      const goodsCopy = [...state.goodsFromServer];\n\n      goodsCopy.sort(\n        (a, b) => a.length - b.length,\n      );\n\n      return ({\n        jsx: goodsCopy.map(good => (\n          <li>\n            {good}\n          </li>\n        )),\n      });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Goods</h1>\n          {\n            this.state.jsx.length === 0\n              ? <button type=\"button\" onClick={this.showGoods}>Start</button>\n              : (\n                <div>\n                  <button type=\"button\" onClick={this.reverseGoods}>\n                    Reverse\n                  </button>\n                  <button type=\"button\" onClick={this.sortAlphabetically}>\n                    Sort alphabetically\n                  </button>\n                  <button type=\"button\" onClick={this.reset}>Reset</button>\n                  <button type=\"button\" onClick={this.sortByNameLength}>\n                    Sort by length\n                  </button>\n                  {this.state.jsx}\n                </div>\n              )\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}